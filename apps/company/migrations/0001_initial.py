# Generated by Django 5.2 on 2025-04-16 11:43
import apps.core.validators
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('tax_id', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(
                    message='Pole moze zawierać tylko cyfry.', regex='^\\d+$'), apps.core.validators.validate_nip])),
                ('tax_id_prefix', models.CharField(default='PL', max_length=2)),
                ('regon', models.CharField(max_length=9, unique=True, validators=[django.core.validators.RegexValidator(
                    message='Pole moze zawierać tylko cyfry.', regex='^\\d+$'), apps.core.validators.validate_regon])),
                ('krs', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(
                    message='Pole moze zawierać tylko cyfry.', regex='^\\d+$'), apps.core.validators.krs_validator])),
                ('street_name', models.CharField(max_length=50)),
                ('street_building_number', models.CharField(max_length=10)),
                ('city', models.CharField(max_length=50)),
                ('post_code', models.CharField(max_length=6)),
                ('house_number', models.CharField(max_length=10)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('active_company', models.ForeignKey(blank=True, null=True,
                 on_delete=django.db.models.deletion.SET_NULL, related_name='active_users', to='company.company')),
                ('company', models.ManyToManyField(
                    related_name='users', to='company.company')),
                ('user', models.OneToOneField(
                    on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
