# Generated by Django 5.2.1 on 2025-05-16 17:28

import apps.core.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('product', '0002_product_description'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='product',
            options={'ordering': ['name'], 'verbose_name': 'Produkt', 'verbose_name_plural': 'Produkty'},
        ),
        migrations.AddField(
            model_name='product',
            name='altum_id',
            field=models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Altum ID'),
        ),
        migrations.AddField(
            model_name='product',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Data utworzenia'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='product',
            name='depth',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Głębokość (cm)'),
        ),
        migrations.AddField(
            model_name='product',
            name='height',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Wysokość (cm)'),
        ),
        migrations.AddField(
            model_name='product',
            name='is_featured',
            field=models.BooleanField(default=False, verbose_name='Wyróżniony'),
        ),
        migrations.AddField(
            model_name='product',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Data aktualizacji'),
        ),
        migrations.AddField(
            model_name='product',
            name='weight',
            field=models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Waga (kg)'),
        ),
        migrations.AddField(
            model_name='product',
            name='width',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Szerokość (cm)'),
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data aktualizacji')),
                ('name', models.CharField(max_length=100, verbose_name='Nazwa producenta')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Opis')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktywny')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Utworzony przez')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Zaktualizowany przez')),
            ],
            options={
                'verbose_name': 'Marka',
                'verbose_name_plural': 'Marki',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='product.brand', verbose_name='Marka'),
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data aktualizacji')),
                ('name', models.CharField(max_length=100, verbose_name='Nazwa kategorii')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Opis')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktywna')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Utworzony przez')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='product.productcategory', verbose_name='Kategoria nadrzędna')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Zaktualizowany przez')),
            ],
            options={
                'verbose_name': 'Kategoria produktu',
                'verbose_name_plural': 'Kategorie produktów',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='product.productcategory', verbose_name='Kategoria'),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data aktualizacji')),
                ('image', models.ImageField(upload_to='products/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'webp']), apps.core.validators.validate_and_compress_image], verbose_name='Zdjęcie')),
                ('alt_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tekst alternatywny')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Główne zdjęcie')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Kolejność')),
                ('original_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Oryginalny rozmiar (bytes)')),
                ('compressed_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Skompresowany rozmiar (bytes)')),
                ('compression_ratio', models.FloatField(blank=True, null=True, verbose_name='Stopień kompresji (%)')),
                ('compression_quality', models.CharField(blank=True, max_length=20, null=True, verbose_name='Jakość kompresji')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Utworzony przez')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.product', verbose_name='Produkt')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Zaktualizowany przez')),
            ],
            options={
                'verbose_name': 'Zdjęcie produktu',
                'verbose_name_plural': 'Zdjęcia produktów',
                'ordering': ['order', 'is_primary'],
            },
        ),
    ]
